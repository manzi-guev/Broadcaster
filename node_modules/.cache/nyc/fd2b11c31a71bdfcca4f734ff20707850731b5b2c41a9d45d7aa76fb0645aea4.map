{"version":3,"sources":["verifyToken.js"],"names":["dotenv","config","decodeToken","jwt","verify","token","process","env","KEY","email","error","res","status","json","message"],"mappings":";;;;;;AAEA;;;;AACA;;;;;;AAHA;AACA;AAIAA,iBAAOC,MAAP;AACA,IAAMC,cAAc,SAAdA,WAAc,QAAS;AAC3B,MAAI;AAAA,sBACgBC,uBAAIC,MAAJ,CAAWC,KAAX,EAAkBC,QAAQC,GAAR,CAAYC,GAA9B,CADhB;AAAA,QACMC,KADN,eACMA,KADN;;AAEF,WAAOA,KAAP;AACA;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd;AACAC,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,GADW;AAEnBF,aAAOA,MAAMI;AAFM,KAArB;AAID;AACF,CAZD;;kBAceZ,W","file":"verifyToken.js","sourceRoot":"C:/Users/CharisUAS/Desktop/Broadcaster/server/helpers","sourcesContent":["/* eslint-disable consistent-return */\r\n/* eslint-disable node/no-unsupported-features/es-syntax */\r\nimport jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\nconst decodeToken = token => {\r\n  try {\r\n    const { email } = jwt.verify(token, process.env.KEY);\r\n    return email;\r\n    /* istanbul ignore catch */\r\n  } catch (error) {\r\n    // eslint-disable-next-line no-undef\r\n    res.status(400).json({\r\n      status: 400,\r\n      error: error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport default decodeToken;\r\n"]}
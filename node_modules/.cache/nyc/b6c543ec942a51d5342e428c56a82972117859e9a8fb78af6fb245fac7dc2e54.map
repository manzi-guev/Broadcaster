{"version":3,"sources":["redflags.js"],"names":["redflags","redflag","req","body","title","type","comment","location","status","images","videos","id","length","newRedflag","createdOn","format","createdBy","header","push","found","find","flag","findRedFlag","splice","indexOf"],"mappings":";;;;;;;qjBAAA;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,WAAW,EAAjB;;IAEMC,O;;;;;;;2BACUC,G,EAAK;AAAA,sBACkDA,IAAIC,IADtD;AAAA,UACTC,KADS,aACTA,KADS;AAAA,UACFC,IADE,aACFA,IADE;AAAA,UACIC,OADJ,aACIA,OADJ;AAAA,UACaC,QADb,aACaA,QADb;AAAA,UACuBC,MADvB,aACuBA,MADvB;AAAA,UAC+BC,MAD/B,aAC+BA,MAD/B;AAAA,UACuCC,MADvC,aACuCA,MADvC;;AAEjB,UAAIC,WAAJ;AACA,UAAIX,SAASY,MAAT,KAAoB,CAAxB,EAA2B;AACzBD,aAAK,CAAL;AACD,OAFD,MAEO;AACLA,aAAKX,SAASA,SAASY,MAAT,GAAkB,CAA3B,EAA8BD,EAA9B,GAAmC,CAAxC;AACD;AACD,UAAME,aAAa;AACjBF,YAAIA,EADa;AAEjBG,mBAAW,wBAASC,MAAT,CAAgB,yBAAhB,CAFM;AAGjBC,mBAAW,2BAAUd,IAAIe,MAAJ,CAAW,OAAX,CAAV,CAHM;AAIjBb,oBAJiB;AAKjBC,kBALiB;AAMjBC,wBANiB;AAOjBC,0BAPiB;AAQjBC,sBARiB;AASjBC,sBATiB;AAUjBC;AAViB,OAAnB;AAYAV,eAASkB,IAAT,CAAcL,UAAd;AACA,aAAOA,UAAP;AACD;;;gCAEkBF,E,EAAI;AACrB,UAAMQ,QAAQnB,SAASoB,IAAT,CAAc;AAAA,eAAQC,KAAKV,EAAL,KAAYA,EAApB;AAAA,OAAd,CAAd;AACA,aAAOQ,KAAP;AACD;;;kCAEoBR,E,EAAI;AACvB,UAAMQ,QAAQ,KAAKG,WAAL,CAAiBX,EAAjB,CAAd;AACAX,eAASuB,MAAT,CAAgBvB,SAASwB,OAAT,CAAiBL,KAAjB,CAAhB,EAAyC,CAAzC;AACD;;;mCAEqBR,E,EAAIL,O,EAAS;AACjC,UAAMa,QAAQ,KAAKG,WAAL,CAAiBX,EAAjB,CAAd;AACAQ,YAAMb,OAAN,GAAgBA,OAAhB;AACA,aAAOa,KAAP;AACD;;;oCAEsBR,E,EAAIJ,Q,EAAU;AACnC,UAAMY,QAAQ,KAAKG,WAAL,CAAiBX,EAAjB,CAAd;AACAQ,YAAMZ,QAAN,GAAiBA,QAAjB;AACA,aAAOY,KAAP;AACD;;;;;;QAGMnB,Q,GAAAA,Q;QAAUC,O,GAAAA,O","file":"redflags.js","sourceRoot":"C:/Users/CharisUAS/Desktop/Broadcaster/server/v1/models","sourcesContent":["/* eslint-disable node/no-unsupported-features/es-syntax */\r\nimport moment from 'moment';\r\nimport taketoken from '../helpers/verifyToken';\r\n\r\nconst redflags = [];\r\n\r\nclass redflag {\r\n  static create(req) {\r\n    const { title, type, comment, location, status, images, videos } = req.body;\r\n    let id;\r\n    if (redflags.length === 0) {\r\n      id = 1;\r\n    } else {\r\n      id = redflags[redflags.length - 1].id + 1;\r\n    }\r\n    const newRedflag = {\r\n      id: id,\r\n      createdOn: moment().format('MMMM Do YYYY, h:mm:ss a'),\r\n      createdBy: taketoken(req.header('token')),\r\n      title,\r\n      type,\r\n      comment,\r\n      location,\r\n      status,\r\n      images,\r\n      videos\r\n    };\r\n    redflags.push(newRedflag);\r\n    return newRedflag;\r\n  }\r\n\r\n  static findRedFlag(id) {\r\n    const found = redflags.find(flag => flag.id === id);\r\n    return found;\r\n  }\r\n\r\n  static deleteRedFlag(id) {\r\n    const found = this.findRedFlag(id);\r\n    redflags.splice(redflags.indexOf(found), 1);\r\n  }\r\n\r\n  static commentRedflag(id, comment) {\r\n    const found = this.findRedFlag(id);\r\n    found.comment = comment;\r\n    return found;\r\n  }\r\n\r\n  static locationRedflag(id, location) {\r\n    const found = this.findRedFlag(id);\r\n    found.location = location;\r\n    return found;\r\n  }\r\n}\r\n\r\nexport { redflags, redflag };\r\n"]}
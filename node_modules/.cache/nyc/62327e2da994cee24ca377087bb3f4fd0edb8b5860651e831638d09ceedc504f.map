{"version":3,"sources":["token.js"],"names":["checkToken","req","res","next","takeToken","header","status","json","error","jwt","verify","process","env","KEY","email","findUser","users","find","user","message"],"mappings":";;;;;;AAGA;;;;AACA;;;;AAJA;AACA;AACA;AAIA,IAAMA,aAAa,SAAbA,UAAa,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAI;AACF,QAAMC,YAAYH,IAAII,MAAJ,CAAW,OAAX,CAAlB;AACA,QAAI,CAACD,SAAL,EAAgB;AACd,aAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,gBAAQ,GADkB;AAE1BE,eAAO;AAFmB,OAArB,CAAP;AAID;;AAPC,sBAQgBC,uBAAIC,MAAJ,CAAWT,IAAII,MAAJ,CAAW,OAAX,CAAX,EAAgCM,QAAQC,GAAR,CAAYC,GAA5C,CARhB;AAAA,QAQMC,KARN,eAQMA,KARN;;AASF,QAAMC,WAAWC,aAAMC,IAAN,CAAW;AAAA,aAAQC,KAAKJ,KAAL,KAAeA,KAAvB;AAAA,KAAX,CAAjB;AACA,QAAI,CAACC,QAAL,EAAe;AACb,aAAOb,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,gBAAQ,GADkB;AAE1BE,eAAO;AAFmB,OAArB,CAAP;AAID;AACDL;AACD,GAjBD,CAiBE,OAAOK,KAAP,EAAc;AACd,WAAON,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,cAAQ,GADkB;AAE1BE,aAAOA,MAAMW;AAFa,KAArB,CAAP;AAID;AACF,CAxBD;kBAyBenB,U","file":"token.js","sourceRoot":"C:/Users/CharisUAS/Desktop/Broadcaster/server/middlewares","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable node/no-unsupported-features/es-syntax */\r\nimport jwt from 'jsonwebtoken';\r\nimport { users, userModel } from '../models/users';\r\n\r\nconst checkToken = (req, res, next) => {\r\n  try {\r\n    const takeToken = req.header('token');\r\n    if (!takeToken) {\r\n      return res.status(401).json({\r\n        status: 401,\r\n        error: 'No token found'\r\n      });\r\n    }\r\n    const { email } = jwt.verify(req.header('token'), process.env.KEY);\r\n    const findUser = users.find(user => user.email === email);\r\n    if (!findUser) {\r\n      return res.status(401).json({\r\n        status: 401,\r\n        error: 'Not authorized'\r\n      });\r\n    }\r\n    next();\r\n  } catch (error) {\r\n    return res.status(400).json({\r\n      status: 400,\r\n      error: error.message\r\n    });\r\n  }\r\n};\r\nexport default checkToken;\r\n"]}
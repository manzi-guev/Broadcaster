{"version":3,"sources":["app.js"],"names":["app","dotenv","config","use","bodyParser","json","urlencoded","extended","routes","routes2","get","req","res","status","message","error","post","delete","patch","port","process","env","PORT","listen","console","log"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ,C,CAPA;;AAQAC,iBAAOC,MAAP;;AAEAF,IAAIG,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAL,IAAIG,GAAJ,CACEC,qBAAWE,UAAX,CAAsB;AACpBC,YAAU;AADU,CAAtB,CADF;AAKAP,IAAIG,GAAJ,CAAQK,gBAAR;AACAR,IAAIG,GAAJ,CAAQM,gBAAR;AACAT,IAAIU,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIC,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACnBQ,YAAQ,GADW;AAEnBC,aAAS;AAFU,GAArB;AAID,CALD;AAMAd,IAAIU,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIC,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACnBQ,YAAQ,GADW;AAEnBE,WAAO;AAFY,GAArB;AAID,CALD;AAMAf,IAAIgB,IAAJ,CAAS,GAAT,EAAc,UAACL,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACnBQ,YAAQ,GADW;AAEnBE,WAAO;AAFY,GAArB;AAID,CALD;AAMAf,IAAIiB,MAAJ,CAAW,GAAX,EAAgB,UAACN,GAAD,EAAMC,GAAN,EAAc;AAC5BA,MAAIC,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACnBQ,YAAQ,GADW;AAEnBE,WAAO;AAFY,GAArB;AAID,CALD;AAMAf,IAAIkB,KAAJ,CAAU,GAAV,EAAe,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC3BA,MAAIC,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACnBQ,YAAQ,GADW;AAEnBE,WAAO;AAFY,GAArB;AAID,CALD;;AAOA,IAAMI,OAAOC,QAAQC,GAAR,CAAYC,IAAzB;AACAtB,IAAIuB,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACrBK,UAAQC,GAAR,4CAAqDN,IAArD;AACD,CAFD;kBAGenB,G","file":"app.js","sourceRoot":"C:/Users/CharisUAS/Desktop/Broadcaster/server","sourcesContent":["/* eslint-disable node/no-unsupported-features/es-syntax */\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport dotenv from 'dotenv';\r\nimport routes from './v1/routes/routes';\r\nimport routes2 from './v2/routes/routes';\r\n\r\nconst app = express();\r\ndotenv.config();\r\n\r\napp.use(bodyParser.json());\r\napp.use(\r\n  bodyParser.urlencoded({\r\n    extended: true\r\n  })\r\n);\r\napp.use(routes);\r\napp.use(routes2);\r\napp.get('/', (req, res) => {\r\n  res.status(200).json({\r\n    status: 200,\r\n    message: 'Welcome to Broadcaster'\r\n  });\r\n});\r\napp.get('*', (req, res) => {\r\n  res.status(404).json({\r\n    status: 404,\r\n    error: 'Route not found'\r\n  });\r\n});\r\napp.post('*', (req, res) => {\r\n  res.status(404).json({\r\n    status: 404,\r\n    error: 'Route not found'\r\n  });\r\n});\r\napp.delete('*', (req, res) => {\r\n  res.status(404).json({\r\n    status: 404,\r\n    error: 'Route not found'\r\n  });\r\n});\r\napp.patch('*', (req, res) => {\r\n  res.status(404).json({\r\n    status: 404,\r\n    error: 'Route not found'\r\n  });\r\n});\r\n\r\nconst port = process.env.PORT;\r\napp.listen(port, () => {\r\n  console.log(`Broadcaster server is running on port ${port}`);\r\n});\r\nexport default app;\r\n"]}
{"version":3,"sources":["redflagController.js"],"names":["redflagController","req","res","body","title","comment","location","images","videos","createdOn","format","createdBy","header","type","status","newRedflag","con","query","redflags","insertRedflag","rowCount","json","message","data","rows"],"mappings":";;;;;;qjBAAA;AACA;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEMA,iB;;;;;;;iCACgBC,G,EAAKC,G,EAAK;AAAA,sBACyBD,IAAIE,IAD7B;AAAA,UACpBC,KADoB,aACpBA,KADoB;AAAA,UACbC,OADa,aACbA,OADa;AAAA,UACJC,QADI,aACJA,QADI;AAAA,UACMC,MADN,aACMA,MADN;AAAA,UACcC,MADd,aACcA,MADd;;AAE5B,UAAMC,YAAY,wBAASC,MAAT,CAAgB,yBAAhB,CAAlB;AACA,UAAMC,YAAY,qBAAUV,IAAIW,MAAJ,CAAW,OAAX,CAAV,CAAlB;AACA,UAAMC,OAAO,SAAb;AACA,UAAMC,SAAS,YAAf;AACA,UAAMC,aAAa,MAAMC,qBAAIC,KAAJ,CAAUC,mBAASC,aAAnB,EAAkC,CACzDV,SADyD,EAEzDE,SAFyD,EAGzDP,KAHyD,EAIzDS,IAJyD,EAKzDR,OALyD,EAMzDC,QANyD,EAOzDQ,MAPyD,EAQzDP,MARyD,EASzDC,MATyD,CAAlC,CAAzB;AAWA;AACA,UAAIO,WAAWK,QAAX,KAAwB,CAA5B,EAA+B;AAC7B,eAAOlB,IAAIY,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AAC1BP,kBAAQ,GADkB;AAE1BQ,mBAAS,8BAFiB;AAG1BC,gBAAMR,WAAWS,IAAX,CAAgB,CAAhB;AAHoB,SAArB,CAAP;AAKD;AACF;;;;;;kBAEYxB,iB","file":"redflagController.js","sourceRoot":"C:/Users/CharisUAS/Desktop/Broadcaster/server/v2/controllers","sourcesContent":["/* eslint-disable consistent-return */\r\n/* eslint-disable node/no-unsupported-features/es-syntax */\r\nimport moment from 'moment';\r\nimport taketoken from '../helpers/token.verifier';\r\nimport con from '../db/connection';\r\nimport redflags from '../models/redflags';\r\n\r\nclass redflagController {\r\n  static async create(req, res) {\r\n    const { title, comment, location, images, videos } = req.body;\r\n    const createdOn = moment().format('MMMM Do YYYY, h:mm:ss a');\r\n    const createdBy = taketoken(req.header('token'));\r\n    const type = 'Redflag';\r\n    const status = 'pending...';\r\n    const newRedflag = await con.query(redflags.insertRedflag, [\r\n      createdOn,\r\n      createdBy,\r\n      title,\r\n      type,\r\n      comment,\r\n      location,\r\n      status,\r\n      images,\r\n      videos\r\n    ]);\r\n    /* istanbul ignore else */\r\n    if (newRedflag.rowCount === 1) {\r\n      return res.status(201).json({\r\n        status: 201,\r\n        message: 'Redflag successfully created',\r\n        data: newRedflag.rows[0]\r\n      });\r\n    }\r\n  }\r\n}\r\nexport default redflagController;\r\n"]}
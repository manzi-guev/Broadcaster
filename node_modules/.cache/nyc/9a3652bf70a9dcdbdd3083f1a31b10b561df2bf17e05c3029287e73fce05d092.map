{"version":3,"sources":["validation.js"],"names":["signUp","req","res","next","schema","firstname","Joi","string","regex","strict","trim","required","error","Error","lastname","email","phonenumber","username","password","output","validate","body","status","json","message","user","signIn","details","createRedflag","title","comment","location","images","videos","editcomment","editlocation","editStatus"],"mappings":"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","file":"validation.js","sourceRoot":"C:/Users/CharisUAS/Desktop/Broadcaster/server/v2/middleware","sourcesContent":["/* eslint-disable node/no-unsupported-features/es-syntax */\r\nimport Joi from '@hapi/joi';\r\n\r\nconst signUp = (req, res, next) => {\r\n  const schema = {\r\n    firstname: Joi.string()\r\n      .regex(/^[a-zA-Z]{3,20}/)\r\n      .strict()\r\n      .trim()\r\n      .required()\r\n      .error(new Error('First name must be letters only')),\r\n    lastname: Joi.string()\r\n      .strict()\r\n      .trim()\r\n      .required(),\r\n    email: Joi.string()\r\n      .strict()\r\n      .trim()\r\n      .required()\r\n      .email(),\r\n    phonenumber: Joi.string()\r\n      .strict()\r\n      .required()\r\n      .trim(),\r\n    username: Joi.string()\r\n      .strict()\r\n      .required()\r\n      .trim(),\r\n    password: Joi.string()\r\n      .strict()\r\n      .required()\r\n      .trim()\r\n  };\r\n  const output = Joi.validate(req.body, schema);\r\n  if (output.error != null) {\r\n    return res.status(400).json({\r\n      status: 400,\r\n      error: `${output.error.message}`\r\n    });\r\n  }\r\n  req.user = schema;\r\n  next();\r\n};\r\nconst signIn = (req, res, next) => {\r\n  const schema = {\r\n    email: Joi.string()\r\n      .trim()\r\n      .required()\r\n      .email(),\r\n    password: Joi.string()\r\n      .trim()\r\n      .required()\r\n  };\r\n  const output = Joi.validate(req.body, schema);\r\n  if (output.error != null) {\r\n    return res.status(400).json({\r\n      status: 400,\r\n      error: `${output.error.details[0].message}`\r\n    });\r\n  }\r\n  next();\r\n};\r\nconst createRedflag = (req, res, next) => {\r\n  const schema = {\r\n    title: Joi.string()\r\n      .strict()\r\n      .trim()\r\n      .required(),\r\n    comment: Joi.string()\r\n      .strict()\r\n      .required()\r\n      .trim(),\r\n    location: Joi.string().required(),\r\n    images: Joi.string()\r\n      .strict()\r\n      .trim()\r\n      .required(),\r\n    videos: Joi.string()\r\n      .strict()\r\n      .trim()\r\n      .required()\r\n  };\r\n  const output = Joi.validate(req.body, schema);\r\n  if (output.error != null) {\r\n    return res.status(400).json({\r\n      status: 400,\r\n      error: `${output.error.details[0].message}`\r\n    });\r\n  }\r\n next();\r\n};\r\nconst editcomment = (req, res, next) => {\r\n  const schema = {\r\n    comment: Joi.string()\r\n      .trim()\r\n      .required()\r\n  };\r\n  const output = Joi.validate(req.body, schema);\r\n  if (output.error != null) {\r\n    return res.status(400).json({\r\n      status: 400,\r\n      error: `${output.error.details[0].message}`\r\n    });\r\n  }\r\n  next();\r\n};\r\nconst editlocation = (req, res, next) => {\r\n  const schema = {\r\n    location: Joi.string()\r\n      .trim()\r\n      .required()\r\n  };\r\n  const output = Joi.validate(req.body, schema);\r\n  if (output.error != null) {\r\n    return res.status(400).json({\r\n      status: 400,\r\n      error: `${output.error.details[0].message}`\r\n    });\r\n  }\r\n  next();\r\n};\r\nconst editStatus = (req, res, next) => {\r\n  const schema = {\r\n    status: Joi.string()\r\n      .trim()\r\n      .required()\r\n  };\r\n  const output = Joi.validate(req.body, schema);\r\n  if (output.error != null) {\r\n    return res.status(400).json({\r\n      status: 400,\r\n      error: `${output.error.details[0].message}`\r\n    });\r\n  }\r\n next();\r\n};\r\nexport { signIn, signUp, createRedflag, editcomment, editlocation, editStatus };\r\n"]}